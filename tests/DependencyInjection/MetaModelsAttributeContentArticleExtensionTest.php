<?phpdeclare(strict_types=1);namespace DependencyInjection;use MetaModels\AttributeContentArticleBundle\Attribute\AttributeTypeFactory;use MetaModels\AttributeContentArticleBundle\DependencyInjection\MetaModelsAttributeContentArticleExtension;use MetaModels\AttributeContentArticleBundle\EventListener\BackendEventListener;use MetaModels\AttributeContentArticleBundle\EventListener\GetOptionsListener;use MetaModels\AttributeContentArticleBundle\EventListener\InitializeListener;use PHPUnit\Framework\TestCase;use Symfony\Component\DependencyInjection\ContainerBuilder;/** * @covers \MetaModels\AttributeContentArticleBundle\DependencyInjection\MetaModelsAttributeContentArticleExtension */class MetaModelsAttributeContentArticleExtensionTest extends TestCase{    public function testLoad(): void    {        $container = new ContainerBuilder();        $extension = new MetaModelsAttributeContentArticleExtension();        $extension->load([], $container);        $expectedDefinitions = [            'service_container',            BackendEventListener::class,            GetOptionsListener::class,            InitializeListener::class,            AttributeTypeFactory::class        ];        self::assertCount(count($expectedDefinitions), $container->getDefinitions());        foreach ($expectedDefinitions as $expectedDefinition)        {            self::assertTrue($container->hasDefinition($expectedDefinition));        }    }}